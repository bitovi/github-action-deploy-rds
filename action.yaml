name: 'Deploy Amazon RDS DB'
description: 'Deploys an AWS RDS database.'
branding:
  icon: upload-cloud
  color: red
inputs:
  bitops_code_only:
    description: 'Will run only the generation phase of BitOps, where the Terraform and Ansible code is built.'
    required: false
  bitops_code_store:
    description: 'Store BitOps code as a GitHub artifact'
    required: false
    default: false

  # AWS
  aws_access_key_id:
    description: 'AWS access key ID'
    required: true
  aws_secret_access_key:
    description: 'AWS secret access key'
    required: true
  aws_session_token:
    description: 'AWS session token'
    required: false
  aws_default_region:
    description: 'AWS default region'
    required: false
    default: us-east-1
  aws_resource_identifier:
    description: 'Set to override the AWS resource identifier for the deployment.  Defaults to `${org}-{repo}-{branch}`.  Use with destroy to destroy specific resources.'
    required: false
  aws_additional_tags:
    description: 'A JSON object of additional tags that will be included on created resources. Example: `{"key1": "value1", "key2": "value2"}`'
    required: false

  # Terraform
  tf_stack_destroy:
    description: 'Set to "true" to Destroy the stack through Terraform.'
    required: false
  tf_state_file_name:
    description: 'Change this to be anything you want to. Carefull to be consistent here. A missing file could trigger recreation, or stepping over destruction of non-defined objects.'
    required: false
  tf_state_file_name_append:
    description: 'Append a string to the tf-state-file. Setting this to `unique` will generate `tf-state-aws-unique`. Can co-exist with the tf_state_file_name variable. '
    required: false
  tf_state_bucket:
    description: 'AWS S3 bucket to use for Terraform state. Defaults to `${org}-${repo}-{branch}-tf-state`'
    required: false
  tf_state_bucket_destroy:
    description: 'Force purge and deletion of S3 bucket defined. Any file contained there will be destroyed. `tf_stack_destroy` must also be `true`'
    required: false
  

  # AWS RDS
  aws_rds_db_enable:
    description: 'Set to true to enable an RDS DB.'
    required: false
  aws_rds_db_name:
    description: 'The name of the database to create when the DB instance is created.'
    required: false
  aws_rds_db_engine:
    description: 'Which Database engine to use. Default is postgres'
    required: false
  aws_rds_db_engine_version:
    description: 'Which Database engine version to use.'
    required: false
  aws_rds_db_security_group_name:
    description: 'The name of the database security group. Defaults to SG for aws_resource_identifier - RDS.'
    required: false
  aws_rds_db_port:
    description: ' Port where the DB listens to.'
    required: false
  aws_rds_db_subnets:
    description: 'Specify which subnets to use as a list of strings. '
    required: false
  aws_rds_db_allocated_storage:
    description: 'Storage size. Defaults to 10.'
    required: false
  aws_rds_db_max_allocated_storage:
    description: 'Max storage size. Defaults to 0 to disable auto-scaling.'
    required: false
  aws_rds_db_instance_class:
    description: 'DB instance server type. Defaults to db.t3.micro.'
    required: false
  aws_rds_db_user:
    description: 'Username for the db. Defaults to dbuser.'
    required: false
  aws_rds_cloudwatch_logs_exports:
    description: 'Set of log types to enable for exporting to CloudWatch logs.'
    required: false
  aws_rds_additional_tags:
    description: 'A JSON object of additional tags that will be included on created resources. Example: `{"key1": "value1", "key2": "value2"}`'
    required: false

  # AWS VPC Inputs
  aws_vpc_create:
    description: 'Define if a VPC should be created'
    required: false
  aws_vpc_name:
    description: 'Set a specific name for the VPC'
    required: false
  aws_vpc_cidr_block:
    description: 'Define Base CIDR block which is divided into subnet CIDR blocks. Defaults to 10.0.0.0/16.'
    required: false
  aws_vpc_public_subnets:
    description: 'Comma separated list of public subnets. Defaults to 10.10.110.0/24'
    required: false
  aws_vpc_private_subnets:
    description: 'Comma separated list of private subnets. If none, none will be created.'
    required: false
  aws_vpc_availability_zones:
    description: 'Comma separated list of availability zones. Defaults to `aws_default_region.'
    required: false
  aws_vpc_id:
    description: 'AWS VPC ID. Accepts `vpc-###` values.'
    required: false
  aws_vpc_subnet_id:
    description: 'Specify a Subnet to be used with the instance. If none provided, will pick one.'
    required: false
  aws_vpc_additional_tags:
    description: 'A JSON object of additional tags that will be included on created resources. Example: `{"key1": "value1", "key2": "value2"}`'
    required: false
    
runs:
  using: 'composite'
  steps:
    - name: Deploy with BitOps
      id: deploy
      uses: bitovi/github-actions-commons@v0.0.6
      with:
        # Current repo vars
        bitops_code_only: ${{ inputs.bitops_code_only }}
        bitops_code_store: ${{ inputs.bitops_code_store }}

        # AWS
        aws_access_key_id: ${{ inputs.aws_access_key_id }}
        aws_secret_access_key: ${{ inputs.aws_secret_access_key }}
        aws_session_token: ${{ inputs.aws_session_token }}
        aws_default_region: ${{ inputs.aws_default_region }}
        aws_resource_identifier: ${{ inputs.aws_resource_identifier }}
        aws_additional_tags: ${{ inputs.aws_additional_tags }}

        # Terraform
        tf_stack_destroy: ${{ inputs.tf_stack_destroy }}
        tf_state_file_name: ${{ inputs.tf_state_file_name }}
        tf_state_file_name_append: ${{ inputs.tf_state_file_name_append }}
        tf_state_bucket: ${{ inputs.tf_state_bucket }}
        tf_state_bucket_destroy: ${{ inputs.tf_state_bucket_destroy }}

        # AWS RDS
        aws_rds_db_enable: ${{ inputs.aws_rds_db_enable }}
        aws_rds_db_name: ${{ inputs.aws_rds_db_name }}
        aws_rds_db_engine: ${{ inputs.aws_rds_db_engine }}
        aws_rds_db_engine_version: ${{ inputs.aws_rds_db_engine_version }}
        aws_rds_db_security_group_name: ${{ inputs.aws_rds_db_security_group_name }}
        aws_rds_db_port: ${{ inputs.aws_rds_db_port }}
        aws_rds_db_subnets: ${{ inputs.aws_rds_db_subnets }}
        aws_rds_db_allocated_storage: ${{ inputs.aws_rds_db_allocated_storage }}
        aws_rds_db_max_allocated_storage: ${{ inputs.aws_rds_db_max_allocated_storage }}
        aws_rds_db_instance_class: ${{ inputs.aws_rds_db_instance_class }}
        aws_rds_db_user: ${{ inputs.aws_rds_db_user }}
        aws_rds_cloudwatch_logs_exports: ${{ inputs.aws_rds_cloudwatch_logs_exports }}
        aws_rds_additional_tags: ${{ inputs.aws_rds_additional_tags }}

        # AWS VPC Inputs
        aws_vpc_create: ${{inputs.aws_vpc_create }}
        aws_vpc_name: ${{inputs.aws_vpc_name }}
        aws_vpc_cidr_block: ${{inputs.aws_vpc_cidr_block }}
        aws_vpc_public_subnets: ${{inputs.aws_vpc_public_subnets }}
        aws_vpc_private_subnets: ${{inputs.aws_vpc_private_subnets }}
        aws_vpc_availability_zones: ${{inputs.aws_vpc_availability_zones }}
        aws_vpc_id: ${{inputs.aws_vpc_id }}
        aws_vpc_subnet_id: ${{inputs.aws_vpc_subnet_id }}
        aws_vpc_additional_tags: ${{inputs.aws_vpc_additional_tags }}

